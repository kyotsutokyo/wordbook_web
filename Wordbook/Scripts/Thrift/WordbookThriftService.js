//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

WordbookThriftService_login_args = function(args) {
  this.userid = null;
  this.password = null;
  if (args) {
    if (args.userid !== undefined) {
      this.userid = args.userid;
    }
    if (args.password !== undefined) {
      this.password = args.password;
    }
  }
};
WordbookThriftService_login_args.prototype = {};
WordbookThriftService_login_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.userid = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.password = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_login_args.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_login_args');
  if (this.userid !== null && this.userid !== undefined) {
    output.writeFieldBegin('userid', Thrift.Type.STRING, 1);
    output.writeString(this.userid);
    output.writeFieldEnd();
  }
  if (this.password !== null && this.password !== undefined) {
    output.writeFieldBegin('password', Thrift.Type.STRING, 2);
    output.writeString(this.password);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_login_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
WordbookThriftService_login_result.prototype = {};
WordbookThriftService_login_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new LoginResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_login_result.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_login_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_getWords_args = function(args) {
  this.userid = null;
  if (args) {
    if (args.userid !== undefined) {
      this.userid = args.userid;
    }
  }
};
WordbookThriftService_getWords_args.prototype = {};
WordbookThriftService_getWords_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRING) {
        this.userid = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_getWords_args.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_getWords_args');
  if (this.userid !== null && this.userid !== undefined) {
    output.writeFieldBegin('userid', Thrift.Type.STRING, 1);
    output.writeString(this.userid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_getWords_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
WordbookThriftService_getWords_result.prototype = {};
WordbookThriftService_getWords_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new Wordbook();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_getWords_result.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_getWords_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_updateWords_args = function(args) {
  this.words = null;
  this.userid = null;
  if (args) {
    if (args.words !== undefined) {
      this.words = args.words;
    }
    if (args.userid !== undefined) {
      this.userid = args.userid;
    }
  }
};
WordbookThriftService_updateWords_args.prototype = {};
WordbookThriftService_updateWords_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size8 = 0;
        var _rtmp312;
        this.words = [];
        var _etype11 = 0;
        _rtmp312 = input.readListBegin();
        _etype11 = _rtmp312.etype;
        _size8 = _rtmp312.size;
        for (var _i13 = 0; _i13 < _size8; ++_i13)
        {
          var elem14 = null;
          elem14 = new Word();
          elem14.read(input);
          this.words.push(elem14);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.userid = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_updateWords_args.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_updateWords_args');
  if (this.words !== null && this.words !== undefined) {
    output.writeFieldBegin('words', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRUCT, this.words.length);
    for (var iter15 in this.words)
    {
      if (this.words.hasOwnProperty(iter15))
      {
        iter15 = this.words[iter15];
        iter15.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.userid !== null && this.userid !== undefined) {
    output.writeFieldBegin('userid', Thrift.Type.STRING, 2);
    output.writeString(this.userid);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_updateWords_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
WordbookThriftService_updateWords_result.prototype = {};
WordbookThriftService_updateWords_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.BOOL) {
        this.success = input.readBool().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_updateWords_result.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_updateWords_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.BOOL, 0);
    output.writeBool(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_deleteWords_args = function(args) {
  this.words = null;
  if (args) {
    if (args.words !== undefined) {
      this.words = args.words;
    }
  }
};
WordbookThriftService_deleteWords_args.prototype = {};
WordbookThriftService_deleteWords_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.LIST) {
        var _size16 = 0;
        var _rtmp320;
        this.words = [];
        var _etype19 = 0;
        _rtmp320 = input.readListBegin();
        _etype19 = _rtmp320.etype;
        _size16 = _rtmp320.size;
        for (var _i21 = 0; _i21 < _size16; ++_i21)
        {
          var elem22 = null;
          elem22 = input.readString().value;
          this.words.push(elem22);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_deleteWords_args.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_deleteWords_args');
  if (this.words !== null && this.words !== undefined) {
    output.writeFieldBegin('words', Thrift.Type.LIST, 1);
    output.writeListBegin(Thrift.Type.STRING, this.words.length);
    for (var iter23 in this.words)
    {
      if (this.words.hasOwnProperty(iter23))
      {
        iter23 = this.words[iter23];
        output.writeString(iter23);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_deleteWords_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
WordbookThriftService_deleteWords_result.prototype = {};
WordbookThriftService_deleteWords_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_deleteWords_result.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_deleteWords_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_insertWord_args = function(args) {
  this.word = null;
  if (args) {
    if (args.word !== undefined) {
      this.word = args.word;
    }
  }
};
WordbookThriftService_insertWord_args.prototype = {};
WordbookThriftService_insertWord_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.word = new Word();
        this.word.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_insertWord_args.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_insertWord_args');
  if (this.word !== null && this.word !== undefined) {
    output.writeFieldBegin('word', Thrift.Type.STRUCT, 1);
    this.word.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_insertWord_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
  }
};
WordbookThriftService_insertWord_result.prototype = {};
WordbookThriftService_insertWord_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_insertWord_result.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_insertWord_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_logout_args = function(args) {
};
WordbookThriftService_logout_args.prototype = {};
WordbookThriftService_logout_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_logout_args.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_logout_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftService_logout_result = function(args) {
};
WordbookThriftService_logout_result.prototype = {};
WordbookThriftService_logout_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

WordbookThriftService_logout_result.prototype.write = function(output) {
  output.writeStructBegin('WordbookThriftService_logout_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

WordbookThriftServiceClient = function(input, output) {
    this.input = input;
    this.output = (!output) ? input : output;
    this.seqid = 0;
};
WordbookThriftServiceClient.prototype = {};
WordbookThriftServiceClient.prototype.login = function(userid, password, callback) {
  if (callback === undefined) {
    this.send_login(userid, password);
    return this.recv_login();
  } else {
    var postData = this.send_login(userid, password, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_login);
  }
};

WordbookThriftServiceClient.prototype.send_login = function(userid, password, callback) {
  this.output.writeMessageBegin('login', Thrift.MessageType.CALL, this.seqid);
  var args = new WordbookThriftService_login_args();
  args.userid = userid;
  args.password = password;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

WordbookThriftServiceClient.prototype.recv_login = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new WordbookThriftService_login_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'login failed: unknown result';
};
WordbookThriftServiceClient.prototype.getWords = function(userid, callback) {
  if (callback === undefined) {
    this.send_getWords(userid);
    return this.recv_getWords();
  } else {
    var postData = this.send_getWords(userid, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_getWords);
  }
};

WordbookThriftServiceClient.prototype.send_getWords = function(userid, callback) {
  this.output.writeMessageBegin('getWords', Thrift.MessageType.CALL, this.seqid);
  var args = new WordbookThriftService_getWords_args();
  args.userid = userid;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

WordbookThriftServiceClient.prototype.recv_getWords = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new WordbookThriftService_getWords_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'getWords failed: unknown result';
};
WordbookThriftServiceClient.prototype.updateWords = function(words, userid, callback) {
  if (callback === undefined) {
    this.send_updateWords(words, userid);
    return this.recv_updateWords();
  } else {
    var postData = this.send_updateWords(words, userid, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_updateWords);
  }
};

WordbookThriftServiceClient.prototype.send_updateWords = function(words, userid, callback) {
  this.output.writeMessageBegin('updateWords', Thrift.MessageType.CALL, this.seqid);
  var args = new WordbookThriftService_updateWords_args();
  args.words = words;
  args.userid = userid;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

WordbookThriftServiceClient.prototype.recv_updateWords = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new WordbookThriftService_updateWords_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'updateWords failed: unknown result';
};
WordbookThriftServiceClient.prototype.deleteWords = function(words, callback) {
  if (callback === undefined) {
    this.send_deleteWords(words);
    return this.recv_deleteWords();
  } else {
    var postData = this.send_deleteWords(words, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_deleteWords);
  }
};

WordbookThriftServiceClient.prototype.send_deleteWords = function(words, callback) {
  this.output.writeMessageBegin('deleteWords', Thrift.MessageType.CALL, this.seqid);
  var args = new WordbookThriftService_deleteWords_args();
  args.words = words;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

WordbookThriftServiceClient.prototype.recv_deleteWords = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new WordbookThriftService_deleteWords_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'deleteWords failed: unknown result';
};
WordbookThriftServiceClient.prototype.insertWord = function(word, callback) {
  if (callback === undefined) {
    this.send_insertWord(word);
    return this.recv_insertWord();
  } else {
    var postData = this.send_insertWord(word, true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_insertWord);
  }
};

WordbookThriftServiceClient.prototype.send_insertWord = function(word, callback) {
  this.output.writeMessageBegin('insertWord', Thrift.MessageType.CALL, this.seqid);
  var args = new WordbookThriftService_insertWord_args();
  args.word = word;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

WordbookThriftServiceClient.prototype.recv_insertWord = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new WordbookThriftService_insertWord_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.success) {
    return result.success;
  }
  throw 'insertWord failed: unknown result';
};
WordbookThriftServiceClient.prototype.logout = function(callback) {
  if (callback === undefined) {
    this.send_logout();
    this.recv_logout();
  } else {
    var postData = this.send_logout(true);
    return this.output.getTransport()
      .jqRequest(this, postData, arguments, this.recv_logout);
  }
};

WordbookThriftServiceClient.prototype.send_logout = function(callback) {
  this.output.writeMessageBegin('logout', Thrift.MessageType.CALL, this.seqid);
  var args = new WordbookThriftService_logout_args();
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush(callback);
};

WordbookThriftServiceClient.prototype.recv_logout = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new WordbookThriftService_logout_result();
  result.read(this.input);
  this.input.readMessageEnd();

  return;
};
